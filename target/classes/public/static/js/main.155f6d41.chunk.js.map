{"version":3,"sources":["components/apiService.js","components/matriseElement.js","components/matrise.js","components/SingleParcelCalc.js","Logos/Posten-Norge-Logo.svg","App.js","reportWebVitals.js","index.js"],"names":["endpoint","axios","get","MatriseElement","props","className","price","k","Matrise","state","matrisedata","tabell","pakker","ApiService","getPrices","then","response","setState","data","this","map","el","index","mel","Component","SingleParcelCalc","liste","i","push","onChange","weightHandler","countHandler","type","value","count","onClick","clickHandler","App","weight","event","target","val","console","log","isNaN","split","length","src","postenLogo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.155f6d41.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst apiUrl = \"http://localhost:8080/api/\"\r\n\r\nclass ApiService {\r\n    \r\n    getPrices(endpoint){\r\n        return axios.get(apiUrl+endpoint)\r\n    }\r\n\r\n}\r\n\r\nexport default new ApiService();","import React from \"react\"\r\n\r\nconst MatriseElement = props =>{\r\n\r\n\r\n    return(\r\n        <div key = {props.k} className = \"MatriseElement\">\r\n            {props.price},-\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MatriseElement","import React, { Component } from \"react\"\r\nimport ApiService from \"./apiService\"\r\nimport MatriseElement from \"./matriseElement\"\r\nclass Matrise extends Component {\r\n    state = {\r\n        matrisedata : [],\r\n        tabell : null\r\n    }\r\n    pakker = [1,2,3,4,5]\r\n    componentDidMount(){\r\n        ApiService.getPrices(\"mp?weight=10&count=5&prisid=1\").then(response => {\r\n        this.setState({matrisedata : response.data })\r\n    })\r\n    }\r\n\r\n    render(){\r\n        \r\n       \r\n        return(\r\n            <div className = \"MatriseWrapper\"> \r\n                <p> Prismatrise for pakker</p>\r\n                {(<div>\r\n                    <div className =\"Row\">\r\n                        <div className = \"MatriseElement\">-</div>\r\n                        {this.pakker.map((el, index) =>{\r\n                            return <div key={index} className = \"MatriseElement\">Antall Pakker: {el}</div>\r\n                        })}\r\n                    </div>\r\n                    {this.state.matrisedata.map((el, index) =>{\r\n                    return (<div className = \"Row\"><div  className = \"MatriseElement\"> Vekt i kg {index+1} </div>\r\n                        {el.map((mel, index) => {\r\n                            return <MatriseElement key = {index} price = {mel}></MatriseElement>    \r\n                        })}\r\n                    </div>)\r\n                })}\r\n            </div>)}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Matrise","import React from \"react\"\r\n\r\nconst SingleParcelCalc = props =>{\r\n    const liste = []\r\n    for(let i=1; i < 36; i++){\r\n        liste.push(i)\r\n    }\r\n    return(\r\n        <div className =\"SingleParcelCalculator\">\r\n            \r\n            <div className =\"VektWrapper\">\r\n                <div className =\"KgDescriptor\">Vekt på pakken</div>\r\n                <select onChange = {props.weightHandler} className =\"Kg\">\r\n                    {liste.map((el, index) =>{\r\n                        return <option key ={index}>{el}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            \r\n            <div className = \"AntallWrapper\">\r\n                <div className =\"AntallDescriptor\">Antall pakker</div>\r\n                <input onChange = {props.countHandler} className =\"Antall\" type=\"number\" value = {props.count}></input>\r\n            </div>\r\n            <div className =\"CalculatedWrapper\">\r\n                <div>Din sending vil koste {props.price} kroner</div>\r\n                <button onClick = {props.clickHandler}>Kalkuler pris</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default SingleParcelCalc","export default __webpack_public_path__ + \"static/media/Posten-Norge-Logo.408ac9ff.svg\";","\nimport { Component } from 'react';\nimport './App.css';\nimport Matrise from \"./components/matrise\"\nimport SingleParcelCalc from './components/SingleParcelCalc';\nimport ApiService from \"./components/apiService\"\nimport postenLogo from \"./Logos/Posten-Norge-Logo.svg\"\nclass App extends Component{\n\n  state = {\n    weight : 1,\n    count : 1,\n    price : 65\n  }\n\n  weightHandler = (event) =>{\n    this.setState({weight: event.target.value})\n  }\n  countHandler = (event) =>{\n    let val = event.target.value\n    console.log(! isNaN(val.split(\"\")[val.length-1]))\n    if(! isNaN(val.split(\"\")[val.length-1])){\n      this.setState({count: event.target.value})\n    }\n    else{\n      this.setState({count: this.state.count})\n    }\n  }\n  clickHandler = (event) =>{\n    ApiService.getPrices(`sp?weight=${this.state.weight}&count=${this.state.count}&prisid=1`).then(response => {\n      this.setState({price : response.data })\n  })\n  }\n\n  render(){\n    return (\n    <div className=\"App\">\n      <div className = \"Header\">\n        <img src = {postenLogo} className =\"Logo\" alt =\"Posten logo\"></img>\n      </div>\n      <div className = \"MainContent\">\n        <div className =\"MainContentWrapper\">\n          <div className =\"Bg\">\n            <Matrise></Matrise>\n            <div className = \"Info\">\n              <p>\n                Prisen På pakkene regnes ut basert på antall pakker, totalvekt og en basisavgift.\n              </p>\n              <p>Basisavgift = 50kr</p>\n              <p>Pakker = 10kr/pr</p>\n              <p>Vekt = 5kr/kg</p>\n            </div>\n            <div>\n              <p>Priskalkulator for pakker</p>\n              <SingleParcelCalc  \n                weightHandler = {this.weightHandler} \n                clickHandler = {this.clickHandler} \n                countHandler = {this.countHandler} \n                price = {this.state.price}\n                count = {this.state.count}\n                >\n              </SingleParcelCalc>\n            </div>\n          </div>\n         \n         \n        </div>\n        \n      </div>\n\n    </div>)\n  }\n\n  \n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}